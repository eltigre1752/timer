{"version":3,"sources":["functions/accurateInterval.js","TimerLengthControl.js","Timer.js","TimerControls.js","Clock.js","App.js","reportWebVitals.js","index.js"],"names":["accurateInterval","fn","time","cancel","nextAt","timeOut","wrapper","Date","getTime","setTimeout","clearTimeout","TimerLengthControl","props","className","title","value","onClick","icon","faAngleDoubleUp","length","disabled","faAngleDoubleDown","Timer","style","alarmColor","id","timerType","clockpify","TimerControls","handlePlay","faPlay","faStop","handleReset","faSyncAlt","Clock","state","date","this","intervalID","setInterval","setState","startInterval","clearInterval","toLocaleTimeString","React","Component","App","breakLength","sessionLength","timerState","timer","color","reset","bind","beginCountDown","timerControl","decrementTimer","phaseControl","switchTimer","warning","buzzer","lengthControl","setSessionLength","setBreakLength","currentTarget","stateToChange","sign","currentLength","num","str","_timer","audioBeep","play","minutes","Math","floor","seconds","pause","currentTime","preload","ref","audio","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dc2c0af.chunk.js","sourcesContent":["const accurateInterval = function (fn, time) {\r\n  let cancel, nextAt, timeOut, wrapper;\r\n  nextAt = new Date().getTime() + time;\r\n  timeOut = null;\r\n  wrapper = function () {\r\n    nextAt += time;\r\n    timeOut = setTimeout(wrapper, nextAt - new Date().getTime());\r\n    return fn();\r\n  };\r\n  cancel = function () {\r\n    return clearTimeout(timeOut);\r\n  };\r\n  timeOut = setTimeout(wrapper, nextAt - new Date().getTime());\r\n  return {\r\n    cancel: cancel,\r\n  };\r\n};\r\n\r\nexport default accurateInterval;\r\n","import \"./styles/App.scss\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleDoubleDown,\r\n  faAngleDoubleUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TimerLengthControl(props) {\r\n  return (\r\n    <div className=\"length-control\">\r\n      <div>{props.title}</div>\r\n\r\n      <button value=\"+\" className=\"btn-level\" onClick={props.onClick}>\r\n        <FontAwesomeIcon className=\"icon lengthBtn\" icon={faAngleDoubleUp} />\r\n      </button>\r\n\r\n      <div className=\"btn-level\">{props.length}</div>\r\n\r\n      <button\r\n        value=\"-\"\r\n        className=\"btn-level\"\r\n        onClick={props.onClick}\r\n        disabled={props.length === 1}\r\n      >\r\n        <FontAwesomeIcon className=\"icon lengthBtn2\" icon={faAngleDoubleDown} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerLengthControl;\r\n","import \"./styles/App.scss\";\r\nimport React from \"react\";\r\n\r\nfunction Timer(props) {\r\n  return (\r\n    <div className=\"timer\" style={props.alarmColor}>\r\n      <div className=\"timer-wraper\">\r\n        <div id=\"timer-label\">{props.timerType}</div>\r\n        <div id=\"time-left\">{props.clockpify()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import \"./styles/App.scss\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faStop, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TimerControls(props) {\r\n  return (\r\n    <div className=\"timer-controls\">\r\n      <button onClick={props.handlePlay}>\r\n        <FontAwesomeIcon className=\"icon playBtn\" icon={faPlay} />\r\n        <FontAwesomeIcon className=\"icon playBtn\" icon={faStop} />\r\n      </button>\r\n      <button onClick={props.handleReset}>\r\n        <FontAwesomeIcon className=\"icon resetBtn\" icon={faSyncAlt} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerControls;\r\n","import \"./styles/App.scss\";\r\nimport React from \"react\";\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n  }\r\n\r\n  startInterval() {\r\n    this.intervalID = setInterval(\r\n      () => this.setState({ date: new Date() }),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.startInterval();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"clock\">{this.state.date.toLocaleTimeString()}</div>;\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import \"./styles/App.scss\";\nimport React from \"react\";\nimport accurateInterval from \"./functions/accurateInterval\";\nimport TimerLengthControl from \"./TimerLengthControl\";\nimport Timer from \"./Timer\";\nimport TimerControls from \"./TimerControls\";\nimport Clock from \"./Clock\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      breakLength: 5,\n      sessionLength: 20,\n      timerType: \"Session\",\n      timerState: \"stopped\",\n      timer: 1200,\n      intervalID: \"\",\n      alarmColor: { color: \"yellowGreen\" },\n    };\n\n    this.reset = this.reset.bind(this);\n    this.clockpify = this.clockpify.bind(this);\n    this.beginCountDown = this.beginCountDown.bind(this);\n    this.timerControl = this.timerControl.bind(this);\n    this.decrementTimer = this.decrementTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n    this.switchTimer = this.switchTimer.bind(this);\n    this.warning = this.warning.bind(this);\n    this.buzzer = this.buzzer.bind(this);\n    this.lengthControl = this.lengthControl.bind(this);\n    this.setSessionLength = this.setSessionLength.bind(this);\n    this.setBreakLength = this.setBreakLength.bind(this);\n  }\n\n  setBreakLength({ currentTarget }) {\n    this.lengthControl(\n      \"breakLength\",\n      currentTarget.value,\n      this.state.breakLength,\n      \"Session\"\n    );\n  }\n\n  setSessionLength({ currentTarget }) {\n    this.lengthControl(\n      \"sessionLength\",\n      currentTarget.value,\n      this.state.sessionLength,\n      \"Break\"\n    );\n  }\n\n  lengthControl(stateToChange, sign, currentLength, timerType) {\n    if (this.state.timerState === \"running\") {\n      return;\n    }\n    if (this.state.timerType === timerType) {\n      if (sign === \"-\" && currentLength !== 1) {\n        this.setState({\n          [stateToChange]: currentLength - 1,\n        });\n      } else if ((sign = \"+\" && currentLength !== 30)) {\n        this.setState({\n          [stateToChange]: currentLength + 1,\n        });\n      }\n    } else if (sign === \"-\" && currentLength !== 1) {\n      this.setState({\n        [stateToChange]: currentLength - 1,\n        timer: currentLength * 60 - 60,\n      });\n    } else if ((sign = \"+\" && currentLength !== 30)) {\n      this.setState({\n        [stateToChange]: currentLength + 1,\n        timer: currentLength * 60 + 60,\n      });\n    }\n  }\n\n  timerControl() {\n    if (this.state.timerState === \"stopped\") {\n      this.beginCountDown();\n      this.setState({ timerState: \"running\" });\n    } else {\n      this.setState({ timerState: \"stopped\" });\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n    }\n  }\n\n  beginCountDown() {\n    this.setState({\n      intervalID: accurateInterval(() => {\n        this.decrementTimer();\n        this.phaseControl();\n      }, 1000),\n    });\n  }\n\n  decrementTimer() {\n    this.setState({\n      timer: this.state.timer - 1,\n    });\n  }\n\n  phaseControl() {\n    let timer = this.state.timer;\n    this.warning(timer);\n    this.buzzer(timer);\n    if (timer < 0) {\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n      if (this.state.timerType === \"Session\") {\n        this.beginCountDown();\n        this.switchTimer(this.state.breakLength * 60, \"Break\");\n      } else {\n        this.beginCountDown();\n        this.switchTimer(this.state.sessionLength * 60, \"Session\");\n      }\n    }\n  }\n\n  switchTimer(num, str) {\n    this.setState({\n      timer: num,\n      timerType: str,\n      alarmColor: { color: \"yellowGreen\" },\n    });\n  }\n\n  warning(_timer) {\n    if (_timer < 61) {\n      this.setState({ alarmColor: { color: \"#a50d0d\" } });\n    } else {\n      this.setState({ alarmColor: { color: \"yellowGreen\" } });\n    }\n  }\n\n  buzzer(_timer) {\n    if (_timer === 0) {\n      this.audioBeep.play();\n    }\n  }\n\n  clockpify() {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return minutes + \":\" + seconds;\n  }\n\n  reset() {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 20,\n      timerType: \"Session\",\n      timerState: \"stopped\",\n      timer: 1200,\n      intervalID: \"\",\n      alarmColor: { color: \"yellowGreen\" },\n    });\n    if (this.state.intervalID) {\n      this.state.intervalID.cancel();\n    }\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n\n  render() {\n    return (\n      <main>\n        <Clock />\n        <div className=\"title\">HONG VAN's Clock !!!</div>\n        <TimerLengthControl\n          length={this.state.sessionLength}\n          title=\"Session Length\"\n          onClick={this.setSessionLength}\n        />\n        <TimerLengthControl\n          length={this.state.breakLength}\n          title=\"Break Length\"\n          onClick={this.setBreakLength}\n        />\n        <Timer\n          alarmColor={this.state.alarmColor}\n          timerType={this.state.timerType}\n          clockpify={this.clockpify}\n        />\n        <TimerControls\n          handlePlay={this.timerControl}\n          handleReset={this.reset}\n        />\n        <audio\n          preload=\"auto\"\n          ref={(audio) => {\n            this.audioBeep = audio;\n          }}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}